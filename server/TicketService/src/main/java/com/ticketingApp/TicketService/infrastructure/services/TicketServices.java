package com.ticketingApp.TicketService.infrastructure.services;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ticketingApp.TicketService.domain.entity.ticket.TicketEntity;
import com.ticketingApp.TicketService.domain.interfaces.TicketInterface;
import com.ticketingApp.TicketService.infrastructure.model.Ticket;
import com.ticketingApp.TicketService.infrastructure.repository.TicketRepository;

@Service
public class TicketServices implements TicketInterface {
    
    @Autowired
    private TicketRepository ticketRepository;

    public List<TicketEntity> getAllTickets() {
        List<TicketEntity> listOfTickets = new ArrayList<>();

        for (TicketEntity ticket: ticketRepository.findAll()) {
            listOfTickets.add(ticket);
        }

        return listOfTickets;
    }

    public Ticket getTicketById(String ticketId) {
        Ticket ticket = null;

        Optional<Ticket> queryResult = ticketRepository.findById(ticketId);

        if (queryResult == null) {
            return ticket;
        }

        return queryResult.get();
    }
    
    public String createTicket(TicketEntity ticketToCreate) {
        if ((ticketToCreate.getUser() == null) || (ticketToCreate.getListOfProducts() == null)) {
            return null;
        }

        Ticket ticket = Ticket.builder()
            .user(ticketToCreate.getUser())
            .listOfProducts(ticketToCreate.getListOfProducts())
            .build();
        
        // Save again to get the id generated by Mongo.
        ticket = ticketRepository.save(ticket);

        return ticket.getId();
    }
    
    public boolean deleteTicket(String ticketId) {
        if (getTicketById(ticketId) == null) {
            return false;
        }

        ticketRepository.deleteById(ticketId);

        return true;
    }
}